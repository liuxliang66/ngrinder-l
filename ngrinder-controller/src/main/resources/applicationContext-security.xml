<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                    http://www.springframework.org/schema/security   http://www.springframework.org/schema/security/spring-security-4.0.xsd
                    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<global-method-security pre-post-annotations="enabled">
        <expression-handler ref="methodSecurityExpressionHandler"/>
    </global-method-security>

	<beans:bean id="reflectionSaltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource">
		<beans:property name="userPropertyToUse" value="username"/>
	</beans:bean>

	<!-- SVN -->
	<beans:bean id="svnAccessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<beans:constructor-arg name="decisionVoters">
			<beans:list>
				<beans:ref bean="authenticatedVoter"/>
				<beans:ref bean="userSwitchPermissionVoter"/>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>

	<beans:bean class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler">
		<beans:property name="defaultRolePrefix" value="" />
	</beans:bean>

	<beans:bean id="methodSecurityExpressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
		<beans:property name="defaultRolePrefix" value="" />
	</beans:bean>

	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter">
		<beans:property name="rolePrefix" value="" />
	</beans:bean>

	<http realm="svn" pattern="/svn/**" access-decision-manager-ref="svnAccessDecisionManager">
		<http-basic entry-point-ref="svnHttpBasicEntryPoint"/>
		<intercept-url pattern="/svn/**" access="hasAnyRole('A', 'S', 'U')" />
		<csrf disabled="true"/>
	</http>

	<!-- Generic Web -->
	<beans:bean id="authenticatedVoter" class="org.springframework.security.access.vote.AuthenticatedVoter"/>

	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg name="decisionVoters">
			<beans:list>
				<beans:ref bean="authenticatedVoter"/>
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>

	<!-- custom-filter extends UsernamePasswordAuthenticationFilter -->
	<beans:bean id="ngrinderUserPasswordAuthenticationFilter"
				class="org.ngrinder.security.NgrinderUsernamePasswordAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/form_login"/>
		<beans:property name="rememberMeServices" ref="rememberMeServices"/>
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"/>
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"/>
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="usernameParameter" value="j_username"/>
		<beans:property name="passwordParameter" value="j_password"/>
	</beans:bean>

	<!-- SuccessHandler -->
	<beans:bean id="loginLogAuthenticationSuccessHandler"
				class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="defaultTargetUrl" value="/home"/>
		<beans:property name="alwaysUseDefaultTargetUrl" value="true"/>
	</beans:bean>

	<!-- FailureHandler -->
	<beans:bean id="simpleUrlAuthenticationFailureHandler"
				class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login"/>
	</beans:bean>

	<beans:bean id="authenticationProcessingFilterEntryPoint"
				class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:constructor-arg name="loginFormUrl" value="/login"/>
	</beans:bean>

	<!-- static resource -->
	<http pattern="/css/**" security="none"/>
	<http pattern="/img/**" security="none"/>
	<http pattern="/js/**" security="none"/>
	<http pattern="/plugins/**" security="none"/>
	<http pattern="/login" security="none"/>

	<!-- used for shared test report page -->
	<http pattern="/perftest/**/report" security="none"/>
	<http pattern="/perftest/**/monitor" security="none"/>
	<http pattern="/perftest/**/graph" security="none"/>

	<!-- accessible from no authorized users -->
	<http pattern="/check/**" security="none"/>
	<http pattern="/agent/download/**" security="none"/>
	<http pattern="/monitor/download/**" security="none"/>
	<http pattern="/jnlp/**" security="none"/>
	<http pattern="/sign_up/**" security="none"/>

	<beans:bean id="basicProcessingFilter"
				class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
		<beans:constructor-arg ref="authenticationManager"/>
		<beans:constructor-arg ref="httpBasicAuthenticationEntryPoint"/>
	</beans:bean>

	<beans:bean id="httpBasicAuthenticationEntryPoint"
				class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
		<beans:property name="realmName" value="ngrinider"/>
	</beans:bean>

	<http entry-point-ref="delegatingAuthenticationEntryPoint" access-decision-manager-ref="accessDecisionManager">
		<intercept-url pattern="/"/>
		<intercept-url pattern="/home"/>
		<intercept-url pattern="/perftest/**"/>
		<intercept-url pattern="/help**"/>
		<intercept-url pattern="/script**"/>
		<intercept-url pattern="/monitor-properties.map"/>
		<intercept-url pattern="/agent/**"/>
		<intercept-url pattern="/user/**"/>
		<custom-filter ref="basicProcessingFilter" position="BASIC_AUTH_FILTER"/>
		<custom-filter ref="pluggablePreAuthFilter" position="PRE_AUTH_FILTER"/>
		<custom-filter ref="ngrinderUserPasswordAuthenticationFilter" position="FORM_LOGIN_FILTER"/>
		<!-- logout to home, and then it will redirect to login. otherwise, there will be some ajax problem. -->
		<logout logout-success-url="/" logout-url="/logout" delete-cookies="JSESSIONID,switchUser"
				invalidate-session="true"/>
		<session-management invalid-session-url="/login" session-fixation-protection="newSession"/>
		<remember-me key="ngrinder" user-service-ref="ngrinderUserDetailsService"/>
		<csrf disabled="true"/>
	</http>


	<beans:bean id="delegatingAuthenticationEntryPoint"
				class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
		<beans:constructor-arg>
			<util:map map-class="java.util.LinkedHashMap">
				<beans:entry key="hasHeader('WWW-Authenticate','Basic')" value-ref="httpBasicAuthenticationEntryPoint"/>
			</util:map>
		</beans:constructor-arg>
		<beans:property name="defaultEntryPoint" ref="authenticationProcessingFilterEntryPoint"/>
	</beans:bean>


	<beans:bean id="rememberMeServices"
				class="org.springframework.security.web.authentication.rememberme.TokenBasedRememberMeServices">
		<beans:constructor-arg name="key"  value="ngrinder"/>
		<beans:constructor-arg name="userDetailsService" ref="ngrinderUserDetailsService"/>
	</beans:bean>

	<beans:bean id="ngrinderPreAuthProvider" class="org.ngrinder.security.NGrinderAuthenticationPreAuthProvider">
		<beans:property name="preAuthenticatedUserDetailsService">
			<beans:bean id="userDetailsServiceWrapper"
						class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
				<beans:property name="userDetailsService" ref="ngrinderUserDetailsService"/>
			</beans:bean>
		</beans:property>
		<beans:property name="userService" ref="userService"/>
	</beans:bean>

	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="ngrinderPreAuthProvider"/>
		<authentication-provider ref="ngrinderAuthenticationProvider"/>
	</authentication-manager>

</beans:beans>
